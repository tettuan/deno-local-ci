name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Verify Deno version
        run: deno --version

      - name: Clean and regenerate lock file
        run: |
          # Remove existing lock file (cross-platform)
          deno eval "try { Deno.removeSync('deno.lock'); } catch { /* ignore if not exists */ }"
          
          # Cache dependencies to regenerate lock file
          deno cache mod.ts
          deno cache src/cli_parser.test.ts src/domain_services.test.ts src/logger.test.ts src/types.test.ts tests/3_core/ci_integration.test.ts
          
          # Verify lock file was created (cross-platform)
          deno eval "try { const stat = Deno.statSync('deno.lock'); console.log('✅ Lock file generated:', stat.size, 'bytes'); } catch { console.log('⚠️ Warning: Lock file not generated'); }"

      - name: Type check
        run: deno check mod.ts

      - name: Run tests
        run: deno task test

      - name: Format check
        run: deno fmt --check

      - name: Lint check
        run: deno lint

      - name: Test JSR publish (dry run)
        run: deno publish --dry-run
