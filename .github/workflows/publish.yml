name: Publish to JSR

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version:
        description: "Version to publish (e.g., 0.1.0)"
        required: true
        type: string

permissions:
  contents: read
  id-token: write

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Verify Deno version
        run: deno --version

      - name: Clean lock file before operations
        run: |
          # Remove existing lock file to avoid version conflicts
          deno eval "try { Deno.removeSync('deno.lock'); } catch { /* ignore if not exists */ }"

      - name: Type check
        run: deno check mod.ts

      - name: Run tests
        run: deno task test

      - name: Format check
        run: deno fmt --check

      - name: Lint check
        run: deno lint

      - name: Update version in deno.json
        if: github.event_name == 'workflow_dispatch'
        run: |
          VERSION="${{ github.event.inputs.version }}"
          jq --arg version "$VERSION" '.version = $version' deno.json > deno.json.tmp
          mv deno.json.tmp deno.json
          cat deno.json

      - name: Extract version from tag
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          jq --arg version "$VERSION" '.version = $version' deno.json > deno.json.tmp
          mv deno.json.tmp deno.json
          cat deno.json

      - name: Dry run publish
        run: |
          # Clean lock file before dry run to avoid version conflicts
          deno eval "try { Deno.removeSync('deno.lock'); } catch { /* ignore */ }"
          deno publish --dry-run

      - name: Publish to JSR
        run: |
          # Clean lock file before publish to avoid version conflicts
          deno eval "try { Deno.removeSync('deno.lock'); } catch { /* ignore */ }"
          deno publish
